% Define parameters
max_episodes = 1;  % Adjust as needed
max_seeds = 5;
reconfiguration = 1;  % Adjust as needed
HL_size = 256;


% Main loop for different seeds
for seed = 1:max_seeds
    fprintf('=== Running seed %d/%d ===\n', seed, max_seeds);
    
    % Train agent
    training_info = training_CaseI(max_episodes, 1, seed, reconfiguration, HL_size, "DDPG");
    
    % Create unique filepath for this seed
    filepath = sprintf('savedAgents_t1_s%d_r%d_h%d_DDPG\\', seed, reconfiguration, HL_size);
    
    % Evaluate agent
    table_result = evaluateAgents(reconfiguration, filepath);
    
    % % Save individual results immediately
    % save(sprintf('training_results_seed%d.mat', seed), ...
    %      'training_info', 'table_result', 'seed', 'HL_size', 'reconfiguration');
    
    fprintf('Completed seed %d. Results saved.\n', seed);
end


% Display summary
fprintf('\n=== Training Complete ===\n');
%% training
% saves struct - make sure not to interrupt (7-10 hours). otherwise, input file path of last saved agent into this function

%traininginfo_reconfig_seed42 = training_CaseI(1,42,reconfiguration,256,"SAC"); %training =1,seed=42,reconfiguration = 1, HL_size = 512

% traininginfo_reconfig_seed42_DDPG = training_CaseI(max_episodes,1,42,reconfiguration,256,"DDPG");
% 
% filepath = 'savedAgents_t1_s42_r1_h256_DDPG\';
% table_h256_s42_r1 = evaluateAgents(reconfiguration,filepath); 

%traininginfo_reconfig_seed42_TD3 = training_CaseI(max_episodes,1,1,reconfiguration,256,"TD3");

%% evaluate saved agents
%outputs table containing AgentName, F1, F2, F3, Reward. deletes constraint violating agents

% filepath = 'savedAgents_t1_s42_r1_h256_DDPG\';
% table_h512_t1_s42_r1 = evaluateAgents(reconfiguration,filepath); 

%% evaluate a specific agent
% filepath = 'simResults_t1_s42_r1_h216_DDPG.mat'; 
% singleagent_evaluator(filepath) %displays f1,f2,f3, reward
